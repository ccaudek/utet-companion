{
  "hash": "da35b401004552eec5d419e272702f50",
  "result": {
    "engine": "knitr",
    "markdown": "# Pianificazione della dimensione campionaria {#sec-linear-models-power}\n\n## Introduzione {.unnumbered .unlisted}\n\nNei capitoli precedenti abbiamo visto come stimare la media di una popolazione, come confrontare due gruppi e come valutare la grandezza di un effetto. Un filo conduttore è emerso chiaramente: ogni stima statistica è accompagnata da un margine di *incertezza*, che può essere più o meno ampio a seconda della quantità di dati a disposizione.\n\nQuesto ci porta a una domanda pratica fondamentale: *quanti dati servono* per affrontare in modo credibile la nostra domanda di ricerca? In psicologia, come in molte altre scienze sociali, raccogliere dati è spesso costoso e impegnativo. Pianificare in anticipo la dimensione campionaria significa quindi trovare un equilibrio tra vincoli pratici e obiettivi scientifici, evitando sia studi troppo piccoli — che producono stime imprecise e poco informative — sia campioni eccessivamente grandi, che sprecano risorse senza reale beneficio.\n\nNell’approccio frequentista, la pianificazione campionaria è tradizionalmente legata al concetto di *potenza statistica*: il calcolo della probabilità di rifiutare l’ipotesi nulla quando l’effetto è presente. In un’ottica *bayesiana*, lo stesso problema può essere affrontato in modo più trasparente, attraverso *simulazioni* o *analisi predittive* che ci permettono di esplorare come l’ampiezza dell’effetto atteso e il numero di osservazioni influiscano sulla precisione delle stime e sulla probabilità di trarre conclusioni scientificamente utili.\n\nIn questo capitolo vedremo come impostare la pianificazione della dimensione campionaria in chiave bayesiana, utilizzando esempi concreti e mostrando come la nozione di “grandezza dell’effetto” si traduca in criteri pratici per decidere il numero di partecipanti da includere in uno studio psicologico.\n\n### Panoramica del capitolo {.unnumbered .unlisted}\n\n- Presentare la definizione frequentista di potenza e il calcolo classico della dimensione campionaria.\n- Discutere i limiti della potenza (soglie arbitrarie, stime imprecise, false certezze).\n- Introdurre l’approccio bayesiano, basato su criteri di precisione e utilità pratica delle stime.\n- Mostrare l’uso della simulazione generativa per valutare in anticipo l’informatività di uno studio.\n- Fornire strumenti per pianificare campioni che producano risultati solidi e interpretabili in psicologia.\n\n---\n\n::: {.callout-tip collapse=true}\n## Prerequisiti\n\n- Consultare *Regression and Other Stories* [@gelman2021regression].\n- Prestare particolare attenzione al capitolo 16, \"Design and sample size decisions\", che offrono una guida dettagliata al tema del potere statistico frequentista che spesso genera aspettative irrealistiche sulla rilevabilità degli effetti e conduce alla progettazione di studi con elevata variabilità e scarso valore informativo.\n:::\n\n::: {.callout-caution collapse=true title=\"Preparazione del Notebook\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"code\", \"_common.R\") |> \n  source()\n\n# Load packages\nif (!requireNamespace(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(mice, brms, cmdstanr)\n```\n:::\n\n:::\n\n\n::: {.callout-note collapse=true title=\"Collegamento con ROS\"}\nNel capitolo 16 di *Regression and Other Stories* [@gelman2021regression] viene illustrato l’approccio frequentista alla pianificazione campionaria, basato sul calcolo della potenza. In questo capitolo riprendiamo quel punto di partenza ma allarghiamo la prospettiva:\n\n- *continuità:* riconosciamo il ruolo della potenza come strumento tradizionale di progettazione degli studi;\n- *estensione:* mostriamo come, in ottica bayesiana, la pianificazione si concentri non sul p-value ma sulla precisione delle stime e sulla loro utilità pratica;\n- *strumenti aggiuntivi:* introduciamo la simulazione generativa, che permette di verificare, prima della raccolta dati, se un disegno è in grado di produrre risultati realmente informativi.\n\nIn questo modo gli studenti possono collocare quanto vedranno qui come un passo successivo e complementare rispetto a ROS.\n:::\n\n\n## L'approccio frequentista\n\nNel framework frequentista, la potenza è definita come la probabilità, calcolata prima che uno studio venga condotto, che un determinato test statistico produca un p-value inferiore a una soglia prestabilita (tipicamente 0,05), dato un effetto reale ipotizzato.\n\nIl calcolo della potenza richiede:\n\n* una stima della dimensione dell'effetto atteso,\n* una stima della variabilità nei dati (deviazione standard),\n* una decisione sulla soglia di significatività,\n* e infine un calcolo (o simulazione) della probabilità che il p-value sia < 0.05.\n\nSi sconsiglia in genere di condurre studi con potenza bassa, perché hanno una bassa probabilità di produrre risultati \"significativi\". Tuttavia, questo ragionamento non considera che il concetto stesso di significatività può essere fuorviante: anche quando un test ha potenza dell'80%, ciò non garantisce che l'effetto stimato sia preciso o utile.\n\n::: {.callout-warning}\nPerché non basta l’80% di potenza?\nUno studio con potenza dell’80% può comunque produrre risultati distorti:\ngli effetti osservati tendono a essere esagerati (errore di tipo M, magnitude),\no addirittura sbagliati nel segno (errore di tipo S, sign).\nQuesto accade perché la potenza misura solo la probabilità di ottenere p < .05, non la precisione né l’utilità pratica delle stime.\n:::\n\n### La maledizione del vincitore\n\nUno studio con bassa potenza può produrre risultati statisticamente significativi che sono ingannevoli. In presenza di molto rumore, gli effetti significativi osservati tendono a essere:\n\n* *esagerati* (errore di tipo $M$, magnitude),\n* *sbagliati nel segno* (errore di tipo $S$, sign).\n\nIn altre parole, anche quando uno studio riesce a \"scoprire\" un effetto, la stima ottenuta può essere gravemente distorta. Questa è una delle ragioni principali per cui molti risultati pubblicati si rivelano non replicabili [@gelman2014beyond].\n\n## Un esempio concreto\n\nPer rendere il confronto più chiaro, usiamo un esempio con gli stessi dati in entrambi gli approcci:\n\n* differenza vera tra le medie: $\\Delta = 5$;\n* deviazione standard comune: $\\sigma = 10$;\n* dimensione del campione: $n = 64$ per gruppo;\n* effetto standardizzato: *Cohen's d = 0.5*\n\n### Analisi frequentista: dimensione del campione per potenza dell'80%\n\nPer stimare la dimensione del campione necessaria a ottenere una potenza dell’80% in un *confronto tra due gruppi indipendenti* (con varianza uguale), possiamo usare la funzione `power.t.test()` disponibile in R.\n\nNel nostro esempio ipotizziamo:\n\n* una differenza attesa tra i gruppi pari a $\\Delta = 5$,\n* una deviazione standard comune pari a $\\sigma = 10$,\n* un test bilaterale con livello di significatività $\\alpha = 0.05$.\n\n#### Calcolo in R\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Calcolo della dimensione campionaria necessaria per 80% di potenza\npower.t.test(\n  delta = 5,        # differenza attesa tra le medie\n  sd    = 10,       # deviazione standard\n  power = 0.8,      # potenza desiderata\n  sig.level = 0.05, # livello di significatività\n  type = \"two.sample\",\n  alternative = \"two.sided\"\n)\n#> \n#>      Two-sample t test power calculation \n#> \n#>               n = 63.8\n#>           delta = 5\n#>              sd = 10\n#>       sig.level = 0.05\n#>           power = 0.8\n#>     alternative = two.sided\n#> \n#> NOTE: n is number in *each* group\n```\n:::\n\n\nIl risultato indica che sono necessari circa 64 partecipanti per gruppo per ottenere l’80% di potenza con questi parametri. Tuttavia, come vedremo nella sezione successiva, questo valore non garantisce necessariamente che la stima dell’effetto sarà sufficientemente precisa o utile dal punto di vista decisionale. L’analisi bayesiana ci offrirà uno strumento più flessibile per valutare *l’informatività* del disegno proposto.\n\n### Analisi bayesiana: informatività a posteriori\n\nNell'approccio bayesiano, non ci si chiede se l'effetto è \"significativo\" rispetto a una soglia arbitraria, ma *quanto* è informativo il risultato per prendere decisioni pratiche. In questo contesto, pianificare uno studio significa domandarsi:\n\n\"Con quanti dati il mio modello bayesiano riuscirà a fornire una stima sufficientemente precisa e utile dell'effetto?\"\n\nPer rispondere, possiamo stabilire dei *criteri di informatività* che riflettano le esigenze del nostro problema. Due criteri possibili sono:\n\n1. l'intervallo di credibilità all'89% per Cohen's *d* ha larghezza ≤ 0.4 (criterio di precisione);\n2. la probabilità a posteriori che *d* > 0.3 è ≥ 90% (criterio di utilità pratica).\n\n#### Simulazione generativa di uno studio\n\nPer verificare se un disegno sperimentale con $n = 64$ per gruppo soddisfa questi criteri, possiamo *simulare uno studio* 100 volte, ogni volta:\n\n* generando nuovi dati,\n* stimando un modello bayesiano,\n* valutando se il risultato è sufficientemente informativo.\n\nDi seguito definiamo la funzione `sim_once()` che esegue una singola simulazione.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Funzione per standardizzare su scala z\nstandardise <- function(x) (x - mean(x)) / sd(x)\n\n# Una singola simulazione bayesiana di uno studio\nsim_once <- function(n = 64, mu0 = 100, delta = 5, sigma = 10) {\n\n  # 1. Generazione dei dati\n  y0 <- rnorm(n, mu0, sigma)         # gruppo controllo\n  y1 <- rnorm(n, mu0 + delta, sigma) # gruppo trattamento\n\n  # 2. Standardizzazione\n  dat <- tibble(score = standardise(c(y0, y1)),\n                group = factor(rep(c(\"ctrl\", \"trt\"), each = n)))\n\n  # 3. Stima del modello bayesiano\n  fit <- brm(score ~ group,\n             data = dat,\n             backend = \"cmdstanr\",\n             chains = 2, iter = 1000, warmup = 500,\n             refresh = 0, silent = 0,\n             prior = c(\n               prior(normal(0, 2), class = \"b\"),\n               prior(exponential(2), class = \"sigma\")\n             ))\n\n  # 4. Estrazione dei campioni posteriori e calcolo di Cohen's d\n  post <- as_draws_df(fit)\n  d_smp <- post$b_grouptrt / post$sigma\n\n  # 5. Output: due indici di informatività\n  tibble(\n    CIw89  = diff(quantile(d_smp, c(.055, .945))),  # larghezza IC 89%\n    p_gt03 = mean(d_smp > 0.3)                      # P(d > 0.3)\n  )\n}\n```\n:::\n\n\nEcco cosa succede passo passo:\n\n1. *Simulazione dei dati*\n\n```r\n  y0 <- rnorm(n, mu0, sigma)\n  y1 <- rnorm(n, mu0 + delta, sigma)\n```\n\n* Si generano due gruppi di n = 64 osservazioni:\n\n  * Il *gruppo di controllo* ha media mu0 = 100.\n  * Il *gruppo trattamento* ha media aumentata di delta = 5.\n  * Entrambi i gruppi hanno la stessa variabilità (sigma = 10).\n* In pratica: simula un esperimento in cui il trattamento ha un effetto medio di 5 unità.\n\n2. *Standardizzazione dei dati*\n\n```r\n  score = standardise(c(y0, y1))\n```\n\n* Le osservazioni dei due gruppi vengono unite e *standardizzate* (portate su scala z): media = 0, deviazione standard = 1.\n* Questo serve a:\n\n  * rendere i dati comparabili tra simulazioni,\n  * semplificare l’interpretazione dei risultati (si lavora su scala standardizzata).\n\n3. *Creazione del dataset*\n\n```r\n  dat <- tibble(score = ..., group = ...)\n```\n\n* Si crea una tabella con le variabili:\n\n  * score: i dati standardizzati\n  * group: un'etichetta che indica se il dato appartiene al gruppo controllo (ctrl) o trattamento (trt).\n\n4. *Stima del modello bayesiano*\n\n```r\n  fit <- brm(score ~ group, ...)\n```\n\n* Si stima un modello bayesiano con brms, dove:\n\n  * la variabile score è prevista dalla variabile group,\n  * si usano *priori debolmente informativi* su effetto (b) e variabilità (sigma).\n* Il coefficiente `b_grouptrt` stima *la differenza media tra i gruppi* (sulla scala standardizzata).\n\n5. *Estrazione dei campioni posteriori*\n\n```r\n  post <- as_draws_df(fit)\n  d_smp <- post$b_grouptrt / post$sigma\n```\n\n* Si estraggono i campioni dalla distribuzione a posteriori.\n* Si calcola *Cohen’s d a posteriori* dividendo l’effetto stimato per la deviazione standard stimata: d_smp.\n\n6. *Output: due indicatori di informatività*\n\n```r\n  tibble(\n    CIw89  = diff(quantile(d_smp, c(.055, .945))),\n    p_gt03 = mean(d_smp > 0.3)\n  )\n```\n\n* *CIw89*: larghezza dell’intervallo di credibilità all’89% → misura di *precisione*.\n* *p_gt03*: proporzione dei campioni a posteriori in cui d > 0.3 → misura di *utilità pratica*.\n\nIn sintesi, ogni volta che chiami `sim_once()`:\n\n* simuli un nuovo dataset realistico;\n* stimi l’effetto del trattamento con un modello bayesiano;\n* misuri quanto è preciso e informativo il risultato.\n\nQuesta funzione è il *mattone fondamentale* per la simulazione generativa di uno studio: ti permette di verificare, ad esempio, se con n = 64 per gruppo riesci a stimare d in modo sufficientemente utile.\n\n#### Esecuzione della simulazione\n\nSimuliamo 100 studi indipendenti con `n = 64` per gruppo:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(123)\nres <- bind_rows(replicate(100, sim_once(), simplify = FALSE))\n```\n:::\n\n\nEsaminiamo i risultati della simulazione:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nresum <- summarise(res,\n  mean_CI   = mean(CIw89),\n  sd_CI     = sd(CIw89),\n  prop_good = mean(p_gt03 >= 0.9)\n)\nprint(resum)\n#> # A tibble: 1 × 3\n#>   mean_CI  sd_CI prop_good\n#>     <dbl>  <dbl>     <dbl>\n#> 1   0.570 0.0204      0.33\n```\n:::\n\n\n#### Visualizzazione dei risultati\n\nIl primo grafico mostra la *distribuzione delle larghezze* degli intervalli di credibilità all’89%, evidenziando quante simulazioni superano la soglia di 0.4. Il secondo mostra quante simulazioni soddisfano il criterio di utilità.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Grafico 1: distribuzione della larghezza IC89\nggplot(res, aes(x = CIw89)) +\n  geom_histogram(binwidth = 0.02) +\n  geom_vline(xintercept = 0.4) +\n  labs(\n    x = \"Larghezza IC89\",\n    y = \"Frequenza\"\n  ) \n```\n\n::: {.cell-output-display}\n![](10_sample_size_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Grafico 2: classificazione delle simulazioni utili/non utili\nggplot(res, aes(x = p_gt03 >= 0.9)) +\n  geom_bar() +\n  scale_x_discrete(labels = c(\"FALSE\" = \"Non utile\", \"TRUE\" = \"Utile\")) +\n  labs(\n    x = \"Criterio: P(d > 0.3) ≥ 0.9\",\n    y = \"Numero di simulazioni\"\n  ) \n```\n\n::: {.cell-output-display}\n![](10_sample_size_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Interpretazione dei risultati\n\n* `mean_CI` rappresenta la *larghezza media dell’intervallo di credibilità* all’89%. Nel nostro caso è circa *0.569*, quindi *troppo ampio* per considerare la stima precisa.\n* `prop_good` è la *proporzione di simulazioni* in cui l’evidenza a favore di un effetto pratico `d > 0.3` supera il 90%. Con `prop_good = 0.1`, solo *1 simulazione su 10* soddisfa questo criterio.\n\n*Conclusione:* con `n = 64` per gruppo, lo studio simulato è *sottodimensionato*: raramente produce una stima precisa e utile. Serve un campione più grande (es. `n = 80` o `n = 100`) per raggiungere criteri più severi di informatività.\n\n#### Confronto con la potenza frequentista\n\nSecondo l’approccio frequentista, `n = 64` per gruppo garantisce circa *80% di potenza* per `d = 0.5`. Ma la simulazione bayesiana mostra che:\n\n* l’intervallo di credibilità risulta *troppo ampio* (≈ 0.57);\n* l’evidenza utile (P(d > 0.3) ≥ 0.9) si verifica *solo nel 10% dei casi*.\n\nQuesto evidenzia i limiti della potenza come unico criterio per pianificare gli studi. Anche uno studio “con potenza adeguata” potrebbe produrre risultati *imprecisi o non praticabili*, e contribuire agli *errori di tipo M* (esagerazione della stima) o *S* (errore nel segno dell’effetto).\n\n*In sintesi*, pianificare uno studio non significa garantire il p < .05, ma garantire che la stima sia abbastanza precisa e utile per informare decisioni.\n\n## Riflessioni conclusive {.unnumbered .unlisted}\n\nIn questo capitolo abbiamo visto come la questione della *dimensione campionaria* sia inseparabile dal problema dell’inferenza statistica. Ogni stima è accompagnata da incertezza, e l’ampiezza di questa incertezza dipende in larga misura dal numero di osservazioni a disposizione. Studiare quante persone includere in un’indagine non è quindi un passaggio tecnico secondario, ma una scelta sostanziale che determina la credibilità e l’utilità scientifica dei risultati.\n\nL’approccio bayesiano ci offre strumenti flessibili per affrontare questo problema. Attraverso simulazioni e analisi predittive possiamo esplorare in anticipo gli scenari più plausibili, valutare come diverse dimensioni campionarie incidano sulla precisione delle stime e collegare le nostre decisioni a soglie di rilevanza pratica. Questo rende la pianificazione non più un esercizio astratto, ma un vero e proprio strumento di progettazione della ricerca, in cui obiettivi teorici, risorse pratiche e criteri di utilità scientifica sono considerati insieme.\n\nIl percorso che abbiamo seguito — dalla stima di una media al confronto tra due gruppi, dalla valutazione della grandezza dell’effetto alla pianificazione campionaria — ci consegna un quadro coerente: fare statistica in psicologia significa gestire l’incertezza in modo esplicito, valutare l’importanza degli effetti osservati e pianificare con consapevolezza la raccolta dei dati.\n\nNel prossimo capitolo vedremo come l’*ANOVA a una via* si inserisca in questo stesso quadro, come caso particolare del modello lineare. Questo ci permetterà di consolidare ulteriormente la visione unificata che abbiamo sviluppato e di collegare strumenti apparentemente diversi all’interno di un impianto metodologico comune.\n\n::: {.callout-note collapse=true title=\"Informazioni sull'ambiente di sviluppo\"}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsessionInfo()\n#> R version 4.5.1 (2025-06-13)\n#> Platform: aarch64-apple-darwin20\n#> Running under: macOS Sequoia 15.6.1\n#> \n#> Matrix products: default\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n#> \n#> locale:\n#> [1] C/UTF-8/C/C/C/C\n#> \n#> time zone: Europe/Rome\n#> tzcode source: internal\n#> \n#> attached base packages:\n#> [1] stats     graphics  grDevices utils     datasets  methods   base     \n#> \n#> other attached packages:\n#>  [1] cmdstanr_0.9.0        mice_3.18.0           pillar_1.11.0        \n#>  [4] tinytable_0.13.0      patchwork_1.3.2       ggdist_3.3.3         \n#>  [7] tidybayes_3.0.7       bayesplot_1.14.0      ggplot2_3.5.2        \n#> [10] reliabilitydiag_0.2.1 priorsense_1.1.1      posterior_1.6.1      \n#> [13] loo_2.8.0             rstan_2.32.7          StanHeaders_2.32.10  \n#> [16] brms_2.22.0           Rcpp_1.1.0            sessioninfo_1.2.3    \n#> [19] conflicted_1.2.0      janitor_2.2.1         matrixStats_1.5.0    \n#> [22] modelr_0.1.11         tibble_3.3.0          dplyr_1.1.4          \n#> [25] tidyr_1.3.1           rio_1.2.3             here_1.0.1           \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] Rdpack_2.6.4          gridExtra_2.3         inline_0.3.21        \n#>  [4] sandwich_3.1-1        rlang_1.1.6           magrittr_2.0.3       \n#>  [7] multcomp_1.4-28       snakecase_0.11.1      compiler_4.5.1       \n#> [10] systemfonts_1.2.3     vctrs_0.6.5           stringr_1.5.1        \n#> [13] pkgconfig_2.0.3       shape_1.4.6.1         arrayhelpers_1.1-0   \n#> [16] fastmap_1.2.0         backports_1.5.0       labeling_0.4.3       \n#> [19] rmarkdown_2.29        ps_1.9.1              nloptr_2.2.1         \n#> [22] ragg_1.5.0            purrr_1.1.0           jomo_2.7-6           \n#> [25] xfun_0.53             glmnet_4.1-10         cachem_1.1.0         \n#> [28] jsonlite_2.0.0        pan_1.9               broom_1.0.9          \n#> [31] parallel_4.5.1        R6_2.6.1              stringi_1.8.7        \n#> [34] RColorBrewer_1.1-3    rpart_4.1.24          boot_1.3-32          \n#> [37] lubridate_1.9.4       estimability_1.5.1    iterators_1.0.14     \n#> [40] knitr_1.50            zoo_1.8-14            pacman_0.5.1         \n#> [43] nnet_7.3-20           Matrix_1.7-4          splines_4.5.1        \n#> [46] timechange_0.3.0      tidyselect_1.2.1      abind_1.4-8          \n#> [49] yaml_2.3.10           codetools_0.2-20      processx_3.8.6       \n#> [52] curl_7.0.0            pkgbuild_1.4.8        lattice_0.22-7       \n#> [55] withr_3.0.2           bridgesampling_1.1-2  coda_0.19-4.1        \n#> [58] evaluate_1.0.5        survival_3.8-3        RcppParallel_5.1.11-1\n#> [61] tensorA_0.36.2.1      checkmate_2.3.3       foreach_1.5.2        \n#> [64] stats4_4.5.1          reformulas_0.4.1      distributional_0.5.0 \n#> [67] generics_0.1.4        rprojroot_2.1.1       rstantools_2.5.0     \n#> [70] scales_1.4.0          minqa_1.2.8           xtable_1.8-4         \n#> [73] glue_1.8.0            emmeans_1.11.2-8      tools_4.5.1          \n#> [76] data.table_1.17.8     lme4_1.1-37           mvtnorm_1.3-3        \n#> [79] grid_4.5.1            rbibutils_2.3         QuickJSR_1.8.0       \n#> [82] colorspace_2.1-1      nlme_3.1-168          cli_3.6.5            \n#> [85] textshaping_1.0.3     svUnit_1.0.8          Brobdingnag_1.2-9    \n#> [88] V8_7.0.0              gtable_0.3.6          digest_0.6.37        \n#> [91] TH.data_1.1-4         htmlwidgets_1.6.4     farver_2.1.2         \n#> [94] memoise_2.0.1         htmltools_0.5.8.1     lifecycle_1.0.4      \n#> [97] mitml_0.4-5           MASS_7.3-65\n```\n:::\n\n:::\n\n## Bibliografia {.unnumbered .unlisted}\n\n\n\n",
    "supporting": [
      "10_sample_size_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}